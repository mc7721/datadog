{
    "id": "1df4ab16570a9136c966973c169b2b61",
    "name": "DataDog Merged API",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "489c5f62bcc929c6f23f781f4aa3af06",
            "name": "Get Metrics",
            "url": "httpsapi\/v1\/\/metrics",
            "description": "\n          Get the list of actively reporting metrics from a given time until now. This endpoint is not available in the Python and Ruby libraries.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "4eec99626a0b1daf227c76e0f56058c3",
            "name": "Add Series",
            "url": "httpsapi\/v1\/\/series",
            "description": "\n          The metrics end-point allows you to post time-series data that can be\n          graphed on Datadog's dashboards.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "[[POSIX_timestamp, numeric_value], ...]",
                    "description": "\n              \n              Note that the timestamp should be in seconds, must be current, and the numeric value is a 32bit float gauge-type value.\n            \n          ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "f0cbb2c210cbf44247716f66bc84e745",
            "name": "Get Query",
            "url": "httpsapi\/v1\/\/query",
            "description": "\n          This end point allows you to query for metrics from any time period.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "773e1e4c6b8283d4cdd8978edace0416",
            "name": "Add Check Run",
            "url": "httpsapi\/v1\/\/check_run",
            "description": "Post a Check Run",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "1a563e47d224f785d3b5c65b220c04ae",
            "name": "Add Downtime",
            "url": "httpsapi\/v1\/\/downtime",
            "description": "Schedule monitor downtime",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": " the type of recurrence. Choose from: days, weeks,\n              months, years.\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "period",
                    "description": " how often to repeat as an integer. For example to repeat every 3 days, select\n                a type of days and a period of 3.\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "week_days",
                    "description": " (optional) a list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "until_occurrences",
                    "description": " (optional) how many times the downtime will be rescheduled.\n                until_occurences and until_date are mutually exclusive\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "until_date",
                    "description": " (optional) the date at which the recurrence should end as a POSIX timestmap.\n                until_occurences and until_date are mutually exclusive\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "7767ba4857d03917d122a8ed898877f4",
            "name": "Get Downtime",
            "url": "httpsapi\/v1\/\/downtime",
            "description": "Get all monitor downtimes",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "033f4a53168d15897add47ac3664ef5b",
            "name": "Put Downtime Downtime",
            "url": "httpsapi\/v1\/\/downtime\/:downtime_id",
            "description": "Update monitor downtime",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": " the type of recurrence. Choose from: days, weeks,\n              months, years.\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "period",
                    "description": " how often to repeat as an integer. For example to repeat every 3 days, select\n                a type of days and a period of 3.\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "week_days",
                    "description": " (optional) a list of week days to repeat on. Choose from: Mon, Tue, Wed, Thu, Fri, Sat or Sun. Only applicable when type is weeks. First letter must be capitalized.\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "until_occurrences",
                    "description": " (optional) how many times the downtime will be rescheduled.\n                until_occurences and until_date are mutually exclusive\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "until_date",
                    "description": " (optional) the date at which the recurrence should end as a POSIX timestmap.\n                until_occurences and until_date are mutually exclusive\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "d069740825018c327b499a975ee673f7",
            "name": "Delete Downtime Downtime",
            "url": "httpsapi\/v1\/\/downtime\/:downtime_id",
            "description": "DELETE downtime downtime",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "ba61c27362e321f53950f1c45d43d96c",
            "name": "Get Downtime Downtime",
            "url": "httpsapi\/v1\/\/downtime\/:downtime_id",
            "description": "Get a monitor downtime",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "0990713eba40e795da45e59e2605422e",
            "name": "Add Screen",
            "url": "httpsapi\/v1\/\/screen",
            "description": "POST screen",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "b403ea6aa5788fd8442246b0399e780e",
            "name": "Get Screen",
            "url": "httpsapi\/v1\/\/screen",
            "description": "Fetch all of your screenboards' definitions.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "30ab8a22ec7c84f8c56ff40cb76d0464",
            "name": "Put Screen Board",
            "url": "httpsapi\/v1\/\/screen\/:board_id",
            "description": "PUT screen board",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "88992fed1c64fc5521301ee6d5ace180",
            "name": "Delete Screen Board",
            "url": "httpsapi\/v1\/\/screen\/:board_id",
            "description": "Delete an existing screenboard.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "342cb663d5e0b4ce14f2716d97b4049e",
            "name": "Get Screen Board",
            "url": "httpsapi\/v1\/\/screen\/:board_id",
            "description": "Fetch an existing screenboard's definition.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "3ee472727648b4c8bb5f18acf6919099",
            "name": "Get Screen Share Board",
            "url": "httpsapi\/v1\/\/screen\/share\/:board_id",
            "description": "Share an existing screenboard's with a public URL.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "ba3e8dcff186a5e716da730d5a56335f",
            "name": "Delete Screen Share Board",
            "url": "httpsapi\/v1\/\/screen\/share\/:board_id",
            "description": "Revoke a currently shared screenboard's.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "1620f970d17897db51896d25618c3b6f",
            "name": "Get Tags Hosts",
            "url": "httpsapi\/v1\/\/tags\/hosts",
            "description": "\n          Return a mapping of tags to hosts for your whole infrastructure.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "543d8822c49542fadf9ad88ceee61bcc",
            "name": "Get Tags Hosts Host Name",
            "url": "httpsapi\/v1\/\/tags\/hosts\/:host_name",
            "description": "\n          Return the list of tags that apply to a given host.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "f5a7c0c07bd1d2225a267b8ba6b8eae1",
            "name": "Add Tags Hosts Host Name",
            "url": "httpsapi\/v1\/\/tags\/hosts\/:host_name",
            "description": "\n          This end point allows you to add tags to a host.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "8516288b875bceebef0e2a03014b2b5d",
            "name": "Put Tags Hosts Host Name",
            "url": "httpsapi\/v1\/\/tags\/hosts\/:host_name",
            "description": "\n          This end point allows you to update all tags for a given host.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "8a82a771ca2fe39c8eae45b0af739ae1",
            "name": "Delete Tags Hosts Host Name",
            "url": "httpsapi\/v1\/\/tags\/hosts\/:host_name",
            "description": "\n          This end point allows you to remove all tags for a given host.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "599d27bfbe30d661918acc071ffe46cd",
            "name": "Add Comments",
            "url": "httpsapi\/v1\/comments",
            "description": "\n          Comments are essentially special forms of events that\n          appear in the stream. They can start a new discussion thread or\n          optionally, reply in another thread.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "80670bc8d636f038370cabe0998c5c55",
            "name": "Put Comments Comment",
            "url": "httpsapi\/v1\/comments\/:comment_id",
            "description": "PUT comments comment",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "a5a10ae71c7c715f4d82df4bf908141b",
            "name": "Delete Comments Comment",
            "url": "httpsapi\/v1\/comments\/:comment_id",
            "description": "DELETE comments comment",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "93eb4bb302205cfcce3d290fef425eb5",
            "name": "Get Graph Snapshot",
            "url": "httpsapi\/v1\/graph\/snapshot",
            "description": "GET graph snapshot",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "graph_def",
                    "description": " can be used instead of metric_query. The JSON document uses the grammar defined here and should be formatted to a single line then URLEncoded. The graph_def argument is only available in the REST API and not using the Ruby or Python wrappers. \n    ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "0cfddfada8b845ed6d644e482420ccf3",
            "name": "Add Events",
            "url": "httpsapi\/v1\/\/events",
            "description": "Post an Event",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "465ad96f7f6589f67220514210677c25",
            "name": "Get Events Event",
            "url": "httpsapi\/v1\/\/events\/:event_id",
            "description": "GET events event",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "4ff8b87245fbce1e0ea604967cdea527",
            "name": "Delete Events Event",
            "url": "httpsapi\/v1\/\/events\/:event_id",
            "description": "DELETE events event",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "7e9248ee944a7584788853d2c7bdaf3d",
            "name": "Add Monitor",
            "url": "httpsapi\/v1\/\/monitor",
            "description": "Create a monitor",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "metric alert",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "service check",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event alert",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "time_aggr(time_window)",
                    "description": "\n            \n              \ntime_aggr avg, sum, max, min, change, or pct_change",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "time_window",
                    "description": " last_#m (5, 10, 15, or 30),\n              last_#h (1, 2, or 4), or last_1d",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "space_aggr",
                    "description": " avg, sum, min, or max",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tags",
                    "description": " one or more tags (comma-separated), or *",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "key",
                    "description": " a 'key' in key:value tag syntax; defines a\n              separate alert for each tag in the group (multi-alert)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "operator",
                    "description": " &lt;, &lt;=, &gt;, &gt;=, ==, or !=",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "#",
                    "description": " an integer or decimal number used to set the\n              threshold",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "change_aggr",
                    "description": " change, pct_change",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "time_aggr",
                    "description": " avg, sum, max, min",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timeshift",
                    "description": " #m_ago (5, 10, 15, or 30),\n              #h_ago (1, 2, or 4), or 1d_ago",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "check",
                    "description": " name of the check, e.g. datadog.agent.up",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": " must be at &gt;= your max threshold (defined\n              in the options). e.g. if you want to notify on 1\n              critical, 3 ok and 2 warn statuses count should be 3.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "event",
                    "description": ", the event query string:\n                \n                  \nstring_query free text query to match against event title and text.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sources",
                    "description": " event sources (comma-separated).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": " event statuses (comma-separated). Valid options: error, warn, and info.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "priority",
                    "description": " event priorities (comma-separated). Valid options: low, normal, all.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "host",
                    "description": " event reporting host (comma-separated).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "excluded_tags",
                    "description": " exluded event tags (comma-separated).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "rollup",
                    "description": " the stats rollup method. count is the only supported method now.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "last",
                    "description": " the timeframe to roll up the counts. Examples: 60s, 4h. Supported timeframes: s, m, h and d.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "silenced",
                    "description": " dictionary of scopes to timestamps or\n              None. Each scope will be muted until the given POSIX\n              timestamp or forever if the value is None.\n              Default: None\n              Examples:\n\n                \n\n                  To mute the alert completely:\n                      {'*': None}\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "role",
                    "description": " for a short time:\n                      {'role:db': 1412798116}\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "notify_no_data",
                    "description": " a boolean indicating whether this\n              monitor will notify when data stops reporting.\n              Default: false\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "no_data_timeframe",
                    "description": " the number of minutes before a\n              monitor will notify when data stops reporting. Must be at least\n              2x the monitor timeframe for metric alerts or 2 minutes for\n              service checks.\n              Default: 2x timeframe for metric alerts, 2 minutes for\n              service checks\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timeout_h",
                    "description": " the number of hours of the monitor not\n              reporting data before it will automatically resolve from a\n              triggered state.\n              Default: None\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "require_full_window",
                    "description": " a boolean indicating whether\n              this monitor needs a full window of data before it's evaluated. We\n              highly recommend you set this to False for sparse\n              metrics, otherwise some evaluations will be skipped.\n              Default: True for \"on average\", \"at all times\" and\n              \"in total\" aggregation. False otherwise.\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "renotify_interval",
                    "description": " the number of minutes after\n              the last notification before a monitor will re-notify on the\n              current status. It will only re-notify if it's not resolved.\n              Default: None\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "escalation_message",
                    "description": " a message to include with a\n              re-notification. Supports the '@username' notification we allow\n              elsewhere. Not applicable if renotify_interval is\n              None.\n              Default: None\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "notify_audit",
                    "description": " a boolean indicating whether tagged\n              users will be notified on changes to this monitor.\n              Default: False\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "locked",
                    "description": " a boolean indicating whether changes to\n              to this monitor should be restricted to the creator or admins.\n              Default: False\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include_tags",
                    "description": " a boolean indicating whether\n              notifications from this monitor will automatically insert its\n              triggering tags into the title.\n              Default: True\n              Examples:\n\n                \n\n                  True:\n                      [Triggered on {host:h1}] Monitor Title\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "[Triggered] Monitor Title",
                    "description": "\n",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "thresholds",
                    "description": " a dictionary of thresholds by threshold\n              type. Currently we have two threshold types for metric alerts:\n              critical and warning. Critical is defined in the query, but can\n              also be specified in this option. Warning threshold can only be\n              specified using the thresholds option.\n              Example: {'critical': 90, 'warning': 80}\n              ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "40a0feec5fb42388708db389297d7a16",
            "name": "Get Monitor",
            "url": "httpsapi\/v1\/\/monitor",
            "description": "Get all monitor details",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "abba1a93c8465f07ff40edb3d92ac8d3",
            "name": "Get Monitor Monitor",
            "url": "httpsapi\/v1\/\/monitor\/:monitor_id",
            "description": "GET monitor monitor",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "46f714cc314e7f9d2e70464f07144ee4",
            "name": "Put Monitor Monitor",
            "url": "httpsapi\/v1\/\/monitor\/:monitor_id",
            "description": "PUT monitor monitor",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "2a055d8be7d35a84324ca985db8ca7d8",
            "name": "Delete Monitor Monitor",
            "url": "httpsapi\/v1\/\/monitor\/:monitor_id",
            "description": "DELETE monitor monitor",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "3d7a058fb688b6a975534b7e513f43a0",
            "name": "Add Monitor Mute All",
            "url": "httpsapi\/v1\/\/monitor\/mute_all",
            "description": "\n        Muting will prevent all monitors from notifying through email and posts\n        to the event stream. State changes will only be visible by checking\n        the alert page.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "2525d3ef5787354749b5304ba34a6eb5",
            "name": "Add Monitor Unmute All",
            "url": "httpsapi\/v1\/\/monitor\/unmute_all",
            "description": "\n        Disables muting all monitors. Throws an error if mute all was\n        not enabled previously.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "94e258e9e47ed08c413f77dbf8e82025",
            "name": "Add Monitor Monitor  Mute",
            "url": "httpsapi\/v1\/\/monitor\/:monitor_id\/mute",
            "description": "POST monitor monitor  mute",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "38c7490f28ea9cb3f7af29e11e1e558e",
            "name": "Add Dash",
            "url": "httpsapi\/v1\/\/dash",
            "description": "Create a Timeboard",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "{\"requests\"",
                    "description": "\n                \n              \n            ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "f211fdb0a840335fae386004a2008503",
            "name": "Get Dash",
            "url": "httpsapi\/v1\/\/dash",
            "description": "Get all Timeboards",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "cb5ff154ca33d761668122380aec7f60",
            "name": "Put Dash Dash",
            "url": "httpsapi\/v1\/\/dash\/:dash_id",
            "description": "Update a Timeboard",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "{\"requests\"",
                    "description": "\n                \n              \n            ",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "56b8eade309a72c6b054a86bbd07095f",
            "name": "Delete Dash Dash",
            "url": "httpsapi\/v1\/\/dash\/:dash_id",
            "description": "Delete a Timeboard",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "ea9585b7097743765360360e24301e5f",
            "name": "Add User",
            "url": "httpsapi\/v1\/user",
            "description": "POST user",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "e0e3a0d290ccab59444b0e08a45a2be3",
            "name": "Get User",
            "url": "httpsapi\/v1\/user",
            "description": "GET user",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "b2f1338caef72945fe3498ce5b29ff4c",
            "name": "Get User Handle",
            "url": "httpsapi\/v1\/user\/:handle",
            "description": "GET user handle",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "ba763f4bbf0b32158932eddd58c4cd28",
            "name": "Put User Handle",
            "url": "httpsapi\/v1\/user\/:handle",
            "description": "\n          Can only be used with application keys belonging to administrators.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "344db92005dac31be3207900cbe82521",
            "name": "Get Graph Embed",
            "url": "httpsapi\/v1\/graph\/embed",
            "description": "\n          Gets a list of previously created embeddable graphs.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "e9f75495f60598a6549ede242bca19ed",
            "name": "Add Graph Embed",
            "url": "httpsapi\/v1\/graph\/embed",
            "description": "\n          Creates a new embeddable graph.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "fdef88972c65442d7d0621b5aae177ba",
            "name": "Get Graph Embed Embed",
            "url": "httpsapi\/v1\/graph\/embed\/:embed_id",
            "description": "\n          Get the HTML fragment for a previously generated embed with embed_id.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        },
        {
            "id": "68bb2afd08b98eb4c0a2f3a69b54bfd5",
            "name": "Get Graph Embed Embed  Enable",
            "url": "httpsapi\/v1\/graph\/embed\/:embed_id\/enable",
            "description": "\n          Enable a specified embed.\n        ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "1df4ab16570a9136c966973c169b2b61",
            "rawModeData": ""
        }
    ]
}